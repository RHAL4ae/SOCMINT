version: '3.8'

services:
  # Data Collector Microservice
  data_collector:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - zookeeper
    environment:
      - KAFKA_BROKER=kafka:9092
      - TOR_PROXY=socks5h://localhost:9050
    volumes:
      - ./.env:/app/.env:ro
    networks:
      - osint-network
    restart: unless-stopped

  # Zookeeper (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - osint-network
    restart: unless-stopped

  # Kafka message broker
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - osint-network
    restart: unless-stopped

  # Kafka UI for monitoring
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
    networks:
      - osint-network
    restart: unless-stopped

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_DB=socmint
      - POSTGRES_USER=socmint
      - POSTGRES_PASSWORD=socmint
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - osint-network

  redis:
    image: redis:6
    volumes:
      - redis_data:/data
    networks:
      - osint-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - osint-network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  osint-network:
    driver: bridge